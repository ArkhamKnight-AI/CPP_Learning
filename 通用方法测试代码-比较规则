#include<iostream>
#include<vector>
#include<queue>

using namespace std;

//class Solution {
//public:
//	//大根堆
//	priority_queue<int> maxQ;
//	//小根堆
//	priority_queue<int, vector<int>, greater<int>>;
//	void insert(int num) {
//		if()
//	}
//
//	double getMedian() {
//
//	}
//}; 

//自定义比较规则
template <typename T>
class Cmp {
public:
	bool operator()(const T& a, const T& b) {
		return a > b;
	}
};

int main() {
	priority_queue<int, vector<int>, Cmp<int>> q;
	q.push(3);
	q.push(1);
	q.push(8);
	q.push(4);
	q.push(6);
	q.push(2);
	q.push(3);
	q.push(9);
	q.push(2);

	cout << "构造小根堆:priority_queue<int, vector<int>, Cmp<int>> q" << endl;
	while (!q.empty()) {
		cout << q.top() << " ";
		q.pop();
	}
	cout << endl;
	return 0;
}

//priority_queue <pair<int, int>, vector<pair<int, int>>, Cmp<pair<int, int>>> q;
//q.push({ 3, 1 });
//q.push({ 2, 4 });
//q.push({ 1, 5 });
//q.push({ 3, 2 });
//q.push({ 6, 7 });
//q.push({ 9, 3 });
//q.push({ 6, 2 });
//q.push({ 3, 4 });
//
//cout << "自定义比较规则构的小根堆:priority_queue<pair<int, int>, vector<pair<int, int>>, Cmp<pair<int, int>>> q" << endl;
//cout << "小根堆构造规则:根据pair中first的值构造小根堆，如果first的值相等，根据second的值从大到小排序" << endl;
//while (!q.empty()) {
//	cout << "(" << q.top().first << ", " << q.top().second << ")" << "  ";
//	q.pop();
//}
//cout << endl;

//cout << "------------------------------------------------------" << endl;



//vector<pair<int, int>> vec = { { 3, 1}, {2, 4}, {1, 5}, { 3, 2 }, { 6, 7 }, {9, 3},  {6, 2}, {3, 4} };
//
//sort(vec.begin(), vec.end(), less<pair<int, int>>());
//cout << "对vector容器进行自定义排序:" << endl;
//cout << "排序规则: 根据pair中的first进行排序，first小的放在前面(less<pair<int, int>>)" << endl;
//cout << "待排序元素:{3, 1}, {2, 4}, {1, 5}, {3, 2 }, {6, 7}, {9, 3}, {6, 2}, {3, 4} " << endl;
//for (auto i : vec) {
//	cout << "(" << i.first << ", " << i.second << ")" << endl;
//}

//vector<int> vec = { 3, 2, 3, 1, 6, 5, 9, 1, 2, 8 };
//sort(vec.begin(), vec.end(), greater<int>());
//
//cout << "对vector容器进行自定义排序:" << endl;
//cout << "排序规则:元素从大到小排序(greater<int>)" << endl;
//cout << "待排序元素:3, 2, 3, 1, 6, 5, 9, 1, 2, 8" << endl;
//
//for (auto i : vec) {
//	cout << i << " ";
//}
//cout << endl;
